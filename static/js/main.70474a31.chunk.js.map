{"version":3,"sources":["component/header.js","component/rangeInput.js","component/configurator.js","component/bubble.js","component/result.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","RangeInput","min","max","title","value","setValue","step","type","onChange","e","target","Configurator","getOriginalBlur","getOriginalTransparency","useState","transparency","setTransparency","blur","setBlur","useEffect","class","Bubble","positionX","positionY","height","width","style","position","background","top","left","borderRadius","backdropFilter","Result","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70474a31.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Header() {\r\n    return (\r\n        <header>\r\n            <div>Glassmorphism Generator</div>\r\n            <div className=\"author\">Made by: Kriszi999</div>\r\n        </header>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function RangeInput({ min, max, title, value, setValue, step }) {\r\n  return (\r\n    <>\r\n      <div className=\"rangeInfo\">\r\n        <div>{title}</div>\r\n        <div>{value / 100}</div>\r\n      </div>\r\n      <input\r\n        type=\"range\"\r\n        value={value}\r\n        step={step ? step : 0}\r\n        onChange={(e) => setValue(e.target.value)}\r\n        min={min}\r\n        max={max}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport RangeInput from './rangeInput'\r\n\r\nfunction Configurator({getOriginalBlur, getOriginalTransparency}) {\r\n    const [transparency, setTransparency] = useState(20);\r\n    const [blur, setBlur] = useState(100)\r\n\r\n    useEffect(() => {\r\n        getOriginalTransparency(transparency);\r\n        getOriginalBlur(blur);\r\n    }, [blur, transparency])\r\n    return (\r\n        <section className=\"config\">\r\n            <h1>Configurator</h1>\r\n           <RangeInput min=\"0\" max=\"100\" step=\"5\" value={transparency} setValue={setTransparency} title=\"Transparency\" />\r\n           <RangeInput min=\"0\" max=\"2000\" step=\"100\" value={blur} setValue={setBlur} title=\"Blur Value\" />\r\n           \r\n            <code>\r\n                <span><span class=\"property\">background</span>: rgba<span class=\"bracket\">(</span><span class=\"value\">255</span>,<span class=\"value\">255</span>,<span class=\"value\">255</span>, <span class=\"value\">{transparency / 100}</span><span class=\"bracket\">)</span>;</span>\r\n                <span><span class=\"property\">backdrop-filter</span>: blur<span class=\"bracket\">(</span><span class=\"value\">{blur / 100}px</span><span class=\"bracket\">)</span>;</span>\r\n                <span><span class=\"property\">-webkit-backdrop-filter</span>:blur<span class=\"bracket\">(</span><span class=\"value\">{blur / 100}px</span><span class=\"bracket\">)</span>;</span>\r\n            </code>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Configurator\r\n","import React from \"react\";\r\n\r\nexport default function Bubble({positionX, positionY, blur, transparency, height, width}) {\r\n  let style = {\r\n    position: \"absolute\",\r\n    background: `rgba(255, 255, 255, ${transparency})`,\r\n    top: `${positionY}%`,\r\n    left: `${positionX}%`,\r\n    width: `${height}px`,\r\n    height: `${width}px`,\r\n    borderRadius: \"50%\",\r\n    backdropFilter: `blur(${blur}px)`\r\n};\r\n\r\n  return <div style={style}></div>;\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport Bubble from './bubble'\r\n\r\nexport default function Result({blur, transparency}) {\r\n\r\n    useEffect(() => {\r\n        console.log(blur, transparency)\r\n    }, [blur, transparency])\r\n\r\n    return (\r\n        <div className=\"result\">\r\n            <p>This section is made for the preview of the glassmorph effect.</p>\r\n            <p>You can customize your glassmorph effect as you want.</p>\r\n            <p>If you want more blur, you can use the slides, and you can do it with the transparency as well.</p>\r\n            <p>When your glassmorph effect is ready, just copy the css code and you are ready to roll</p>\r\n            <Bubble positionX=\"50\" positionY=\"80\" blur={blur / 100} transparency={transparency / 100} height=\"100\" width=\"100\" />\r\n            <Bubble positionX=\"60\" positionY=\"10\" blur={blur / 100} transparency={transparency / 100} height=\"200\" width=\"200\" />\r\n            <Bubble positionX=\"20\" positionY=\"10\" blur={blur / 100} transparency={transparency / 100} height=\"50\" width=\"50\" />\r\n            <Bubble positionX=\"20\" positionY=\"50\" blur={blur / 100} transparency={transparency / 100} height=\"75\" width=\"75\" />\r\n        </div>\r\n    )\r\n}\r\n","import './style/style.css';\nimport Header from './component/header'\nimport Configurator from './component/configurator';\nimport Result from './component/result';\nimport { useState } from 'react';\n\nfunction App() {\n\n  const [blur, setBlur] = useState(20)\n  const [transparency, setTransparency] = useState(100)\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"mainSection\">\n        <Configurator getOriginalBlur={setBlur} getOriginalTransparency={setTransparency}/>\n        <Result blur={blur} transparency={transparency}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}